name: Test
on: [push, pull_request]
jobs:
  linters:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Setup up Python 3.10
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"

      - name: Update pip
        run: python -m pip install -U pip

      - name: Install dependencies
        run: python -m pip install flake8

      - name: Run flake8 linter (source)
        run: flake8 --ignore E12,E226,W503 --max-line-length 110 --show-source smart_open

  unit_tests:
    needs: [linters]
    runs-on: ${{ matrix.os }}
    env:
      BOTO_CONFIG: "/dev/null"
      SO_BUCKET: smart-open

    strategy:
      matrix:
        include:
          - {python: '3.7', os: ubuntu-20.04}
          - {python: '3.8', os: ubuntu-20.04}
          - {python: '3.9', os: ubuntu-20.04}
          - {python: '3.10', os: ubuntu-20.04}

          - {python: '3.7', os: windows-2019}
          - {python: '3.8', os: windows-2019}
          - {python: '3.9', os: windows-2019}
          - {python: '3.10', os: windows-2019}
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Update pip
        run: python -m pip install -U pip

      - name: Install smart_open and its dependencies
        run: pip install -e .[test]

      - name: Run unit tests
        run: pytest smart_open -v -rfxECs --durations=20

  doctest:
    needs: [linters,unit_tests]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - {python: '3.7', os: ubuntu-20.04}
          - {python: '3.8', os: ubuntu-20.04}
          - {python: '3.9', os: ubuntu-20.04}
          - {python: '3.10', os: ubuntu-20.04}

          - {python: '3.7', os: windows-2019}
          - {python: '3.8', os: windows-2019}
          - {python: '3.9', os: windows-2019}
          - {python: '3.10', os: windows-2019}

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Update pip
        run: python -m pip install -U pip

      - name: Install smart_open and its dependencies
        run: pip install -e .[test]

      - run: python tox_helpers/check_keys.py

      - name: Run doctests
        run: python tox_helpers/doctest.py

  integration:
    needs: [linters,unit_tests]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - {python: '3.7', os: ubuntu-20.04, moto_server: true}
          - {python: '3.8', os: ubuntu-20.04}
          - {python: '3.9', os: ubuntu-20.04}
          - {python: '3.10', os: ubuntu-20.04}

          # Not sure why we exclude these, perhaps for historical reasons?
          #
          # - {python: '3.7', os: windows-2019}
          # - {python: '3.8', os: windows-2019}
          # - {python: '3.9', os: windows-2019}
          # - {python: '3.10', os: windows-2019}

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Update pip
        run: python -m pip install -U pip

      - run: python -m pip install numpy

      - name: Install smart_open and its dependencies
        run: pip install -e .[test]

      - run: python tox_helpers/check_keys.py

      - run: bash tox_helpers/helpers.sh enable_moto_server
        if: ${{ matrix.moto_server }}

      - name: Run integration tests
        run: python tox_helpers/run_integration_tests.py

      - run: bash tox_helpers/helpers.sh disable_moto_server
        if: ${{ matrix.moto_server }}

  benchmarks:
    needs: [linters,unit_tests]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - {python: '3.7', os: ubuntu-20.04}
          - {python: '3.8', os: ubuntu-20.04}
          - {python: '3.9', os: ubuntu-20.04}
          - {python: '3.10', os: ubuntu-20.04}

          # - {python: '3.7', os: windows-2019}
          # - {python: '3.8', os: windows-2019}
          # - {python: '3.9', os: windows-2019}
          # - {python: '3.10', os: windows-2019}

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Update pip
        run: python -m pip install -U pip

      - name: Install smart_open and its dependencies
        run: pip install -e .[test]

      - run: pip install awscli pytest_benchmark

      - run: python tox_helpers/check_keys.py

      - name: Run benchmarks
        run: python tox_helpers/run_benchmarks.py

      #
      # The test_coverage environment in tox.ini generates coverage data and
      # saves it to disk.  This step uploads that data.  We do it
      # separately from the tox env because the upload can fail for various
      # reasons (e.g. https://github.com/lemurheavy/coveralls-public/issues/1392)
      # and we don't want it to break the build.
      #
      # Looks like there's a github action for this
      # (https://github.com/coverallsapp/github-action/issues/30) but it does
      # not work with pytest output.
      #
      # - name: Upload code coverage to coveralls.io
      #   if: ${{ matrix.coveralls }}
      #   continue-on-error: true
      #   env:
      #     GITHUB_TOKEN: ${{ github.token }}
      #   run: |
      #     pip install coveralls
      #     coveralls
